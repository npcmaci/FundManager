"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _fsExtra = require("fs-extra");

var _chokidar = _interopRequireDefault(require("chokidar"));

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(api, options = {}) {
  // @tmp/micro-app
  (0, _fsExtra.ensureDirSync)('./src/.hui/micro-app');
  /**
   * frameEmitter
   * onMicroApp
   * triggerMicroApp
   */

  api.addHuiExports([{
    specifiers: '*',
    source: '@tmp/micro-app/registerEmitter.js'
  }]);
  (0, _fsExtra.copyFileSync)(_path.default.resolve(__dirname, '../template/registerEmitter.js'), './src/.hui/micro-app/registerEmitter.js'); // vuex root module synchronization

  api.writeTmpFile('micro-app/root.js', updateRootStore(options.vuex, (0, _fsExtra.pathExistsSync)('./src/store/root.js')));
  api.addEntryFileBefore('app', '@tmp/micro-app/root.js');

  _chokidar.default.watch('./src/store/root.js').on('add', () => api.writeTmpFile('micro-app/root.js', updateRootStore(options.vuex, true))).on('unlink', () => api.writeTmpFile('micro-app/root.js', updateRootStore(options.vuex, false)));
}

function updateRootStore(vuex, isRootExisted) {
  const root = isRootExisted ? 'require("@/store/root")' : '{}';
  let code = `
import hCore, { frameEmitter, ${vuex ? 'store' : ''} } from "@hsui/core";

`;

  if (vuex) {
    code += `
const _mutations = [];

if (frameEmitter) {
  frameEmitter.on("app-store-ready", () => {
    if (store.hasModule("root")) {
      const rawRootModule = ${root};
      frameEmitter.trigger("register-root-module", { root: rawRootModule });
      if (_mutations.length) {
        _mutations.forEach((mutation) => {
          frameEmitter.trigger("update-root-module", { mutation, root: rawRootModule });
        });
      }
    }
  });

  store.subscribe((mutation, state) => {
    if (${/root\//}.test(mutation.type)) {
      _mutations.push(mutation);
      frameEmitter.trigger("update-root-module", { mutation, root: ${root} });
    }
  });
}`;
  }

  return code;
}