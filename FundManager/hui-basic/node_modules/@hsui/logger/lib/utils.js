function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Native extend
 */
export var extend = Object.assign;
/**
 * Underscore isNumber
 */

export function isNumber(value) {
  return Object.prototype.toString.call(value) === '[object Number]';
}
/**
 * Lodash isObject
 */

export function isObject(value) {
  var type = _typeof(value);

  return value != null && (type == 'object' || type == 'function');
}